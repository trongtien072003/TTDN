@model proj_tt.Web.Models.Orders.MyOrderListViewModel
@using proj_tt.Order
@{
    ViewBag.Title = "My Orders";
}
@if (Context.Request.Query["success"] == "true")
{
    <script>
        abp.message.success("Đặt hàng thành công!", "Thành công");
    </script>
}

<div class="container py-4">
    <h2 class="mb-4 fw-bold">My Orders</h2>

    <div class="row mb-3 align-items-center">
        <div class="col-md-3">
            <select class="form-select" onchange="filterByStatus(this.value)">
                <option value="">All Orders</option>
                @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                {
                    var selected = Model.Status == status ? "selected" : "";
                    <option value="@status" selected="@((Model.Status == status).ToString().ToLower())">@status</option>

                }
            </select>
        </div>
        <div class="col-md-4">
            <input type="text" id="searchKeyword" class="form-control" placeholder="Search orders..." value="@Model.Keyword">
        </div>
        <div class="col-md-2">
            <button class="btn btn-primary w-100" onclick="submitSearch()">Search</button>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Items</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td><a href="@Url.Action("Details", "UserOrder", new { id = order.Id })">#ORD@order.Id</a><br /><small class="text-muted">Express Delivery</small></td>
                        <td>@order.CreationTime.ToString("MMMM dd, yyyy")</td>
                        <td>
                            <span class="badge rounded-pill bg-@GetStatusColor(order.Status)">@order.Status</span>
                        </td>
                        <td>@(order.OrderItems?.Count ?? 0) item(s)</td>
                        <td><strong>@order.TotalAmount.ToString("C0")</strong></td>
                        <td>
                            <button class="btn btn-sm btn-outline-info view-order" data-id="@order.Id">
                                Chi tiết
                            </button>
                            @if (order.Status == OrderStatus.Pending)
                            {
                                <button type="button" class="btn btn-sm btn-danger" onclick="confirmCancel(@order.Id)">Cancel</button>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination placeholder -->
    <nav class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled"><a class="page-link">&laquo;</a></li>
            <li class="page-item active"><a class="page-link">1</a></li>
            <li class="page-item"><a class="page-link">2</a></li>
            <li class="page-item"><a class="page-link">3</a></li>
            <li class="page-item"><a class="page-link">&raquo;</a></li>
        </ul>
    </nav>

    <!-- Summary -->
    <div class="row text-center mt-4 g-3">
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Total Orders</h6>
                <p class="fw-bold text-primary mb-0">@Model.Orders.Count</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Delivered</h6>
                <p class="fw-bold text-success mb-0">@Model.Orders.Count(o => o.Status == OrderStatus.Delivered)</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Processing</h6>
                <p class="fw-bold text-warning mb-0">@Model.Orders.Count(o => o.Status == OrderStatus.Processing)</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Pending</h6>
                <p class="fw-bold text-secondary mb-0">@Model.Orders.Count(o => o.Status == OrderStatus.Pending)</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Shipped</h6>
                <p class="fw-bold text-info mb-0">@Model.Orders.Count(o => o.Status == OrderStatus.Shipped)</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="bg-light p-3 rounded shadow-sm">
                <h6 class="mb-1">Cancelled</h6>
                <p class="fw-bold text-danger mb-0">@Model.Orders.Count(o => o.Status == OrderStatus.Cancelled)</p>
            </div>
        </div>
    </div>

@section Scripts {
<script>
    function submitSearch() {
        const keyword = document.getElementById("searchKeyword").value;
        const status = document.querySelector("select").value;
        const url = new URL(window.location.href);
        url.searchParams.set("keyword", keyword);
        url.searchParams.set("statusStr", status);
        window.location.href = url.toString();
    }

    function filterByStatus(status) {
        const url = new URL(window.location.href);
        url.searchParams.set("statusStr", status);
        window.location.href = url.toString();
    }
  function cancelOrder(orderId) {
                if (!confirm("Bạn có chắc chắn muốn huỷ đơn hàng này không?")) return;

                fetch(`/orders/cancel/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': getAntiForgeryToken()
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Đã huỷ đơn hàng thành công.");
                        location.reload();
                    } else {
                        alert("Huỷ đơn hàng thất bại.");
                    }
                })
                .catch(error => {
                    console.error(error);
                    alert("Lỗi hệ thống khi huỷ đơn.");
                });
 }
             function showOrderDetail(orderId) {
                abp.ui.setBusy();

                $.ajax({
                    url: `/orders/details/${orderId}`,
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (html) {
                        $('#OrderDetailContainer').html(html);

                        // Hiển thị Bootstrap modal
                        const modal = new bootstrap.Modal(document.getElementById('UserOrderDetail'));
                        modal.show();
                    },
                    error: function (xhr) {
                        console.error(xhr.responseText || xhr);
                        abp.message.error("Không thể hiển thị chi tiết đơn hàng", "Lỗi");
                    },
                    complete: function () {
                        abp.ui.clearBusy();
                    }
                });
            }
                          // View modal
                  $(document).on('click', '.view-order', function () {
                const id = $(this).data('id');
                $.get(`/orders/view-modal/${id}`, function (html) {
                    $('#OrderDetailModalContainer').html(html);
                    $('#OrderDetailModal').modal('show');
                }).fail(() => abp.message.error("Không thể tải chi tiết đơn hàng."));
            });
</script>
}

@functions {
    public string GetStatusColor(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "secondary",
            OrderStatus.Processing => "warning",
            OrderStatus.Shipped => "info",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            _ => "light"
        };
    }
}
